"""Add comprehensive job tracker schema - 31 new tables

Revision ID: 25bc5a96f46a
Revises: 7eb9e8acf91f
Create Date: 2025-08-01 18:01:57.560705

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '25bc5a96f46a'
down_revision: Union[str, None] = '7eb9e8acf91f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ExportTemplate',
    sa.Column('ExportTemplateID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('TemplateName', sa.Unicode(length=255), nullable=False),
    sa.Column('TemplateType', sa.Unicode(length=50), nullable=True),
    sa.Column('Content', sa.UnicodeText(), nullable=True),
    sa.Column('IsActive', sa.Boolean(), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.PrimaryKeyConstraint('ExportTemplateID')
    )
    op.create_table('JobBoard',
    sa.Column('JobBoardID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('BoardName', sa.Unicode(length=255), nullable=False),
    sa.Column('BoardType', sa.Unicode(length=50), nullable=True),
    sa.Column('Domain', sa.Unicode(length=255), nullable=True),
    sa.Column('IndustryFocus', sa.Unicode(length=255), nullable=True),
    sa.Column('FunctionalArea', sa.Unicode(length=255), nullable=True),
    sa.Column('ValidationConfidence', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('IsActive', sa.Boolean(), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.PrimaryKeyConstraint('JobBoardID')
    )
    op.create_table('JobBoardJob',
    sa.Column('JobBoardJobID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('JobBoardID', sa.Integer(), nullable=False),
    sa.Column('JobTitle', sa.Unicode(length=255), nullable=False),
    sa.Column('CompanyName', sa.Unicode(length=255), nullable=False),
    sa.Column('JobDescription', sa.UnicodeText(), nullable=True),
    sa.Column('Location', sa.Unicode(length=255), nullable=True),
    sa.Column('JobURL', sa.Unicode(length=500), nullable=True),
    sa.Column('JobAgeEstimate', sa.Integer(), nullable=True),
    sa.Column('IsRepost', sa.Boolean(), nullable=True),
    sa.Column('RepostFrequency', sa.Integer(), nullable=True),
    sa.Column('UnitCount', sa.Integer(), nullable=True),
    sa.Column('IsActive', sa.Boolean(), nullable=True),
    sa.Column('ContactPersonProfileID', sa.Integer(), nullable=True),
    sa.Column('ContactPersonType', sa.Unicode(length=50), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['ContactPersonProfileID'], ['Profile.ProfileID'], ),
    sa.ForeignKeyConstraint(['JobBoardID'], ['JobBoard.JobBoardID'], ),
    sa.PrimaryKeyConstraint('JobBoardJobID')
    )
    op.create_table('ProfileCareerAspiration',
    sa.Column('ProfileCareerAspirationID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ProfileID', sa.Integer(), nullable=False),
    sa.Column('ShortTermRole', sa.Unicode(length=255), nullable=True),
    sa.Column('LongTermRole', sa.Unicode(length=255), nullable=True),
    sa.Column('AspirationStatement', sa.Unicode(length=1000), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['ProfileID'], ['Profile.ProfileID'], ),
    sa.PrimaryKeyConstraint('ProfileCareerAspirationID')
    )
    op.create_table('ProfileCertification',
    sa.Column('ProfileCertificationID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ProfileID', sa.Integer(), nullable=False),
    sa.Column('CertificationName', sa.Unicode(length=255), nullable=False),
    sa.Column('IssuingOrganization', sa.Unicode(length=255), nullable=True),
    sa.Column('IssueDate', sa.DateTime(), nullable=True),
    sa.Column('ExpiryDate', sa.DateTime(), nullable=True),
    sa.Column('CredentialID', sa.Unicode(length=100), nullable=True),
    sa.Column('Description', sa.Unicode(length=1000), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['ProfileID'], ['Profile.ProfileID'], ),
    sa.PrimaryKeyConstraint('ProfileCertificationID')
    )
    op.create_table('ProfileConsent',
    sa.Column('ProfileConsentID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ProfileID', sa.Integer(), nullable=False),
    sa.Column('ConsentType', sa.Unicode(length=50), nullable=True),
    sa.Column('IsGranted', sa.Boolean(), nullable=True),
    sa.Column('GrantedTo', sa.Unicode(length=100), nullable=True),
    sa.Column('GrantedDate', sa.DateTime(), nullable=True),
    sa.Column('ExpiryDate', sa.DateTime(), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['ProfileID'], ['Profile.ProfileID'], ),
    sa.PrimaryKeyConstraint('ProfileConsentID')
    )
    op.create_table('ProfileEducation',
    sa.Column('ProfileEducationID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ProfileID', sa.Integer(), nullable=False),
    sa.Column('InstitutionName', sa.Unicode(length=255), nullable=False),
    sa.Column('Degree', sa.Unicode(length=255), nullable=True),
    sa.Column('FieldOfStudy', sa.Unicode(length=255), nullable=True),
    sa.Column('StartDate', sa.DateTime(), nullable=True),
    sa.Column('EndDate', sa.DateTime(), nullable=True),
    sa.Column('GPA', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('Description', sa.Unicode(length=1000), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['ProfileID'], ['Profile.ProfileID'], ),
    sa.PrimaryKeyConstraint('ProfileEducationID')
    )
    op.create_table('ProfileProject',
    sa.Column('ProfileProjectID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ProfileID', sa.Integer(), nullable=False),
    sa.Column('ProjectName', sa.Unicode(length=255), nullable=False),
    sa.Column('Description', sa.Unicode(length=2000), nullable=True),
    sa.Column('Technologies', sa.Unicode(length=500), nullable=True),
    sa.Column('ProjectURL', sa.Unicode(length=500), nullable=True),
    sa.Column('StartDate', sa.DateTime(), nullable=True),
    sa.Column('EndDate', sa.DateTime(), nullable=True),
    sa.Column('IsCurrent', sa.Boolean(), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['ProfileID'], ['Profile.ProfileID'], ),
    sa.PrimaryKeyConstraint('ProfileProjectID')
    )
    op.create_table('ProfileType',
    sa.Column('ProfileTypeID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ProfileID', sa.Integer(), nullable=False),
    sa.Column('ProfileType', sa.Unicode(length=50), nullable=True),
    sa.Column('IsVerified', sa.Boolean(), nullable=True),
    sa.Column('VerificationMethod', sa.Unicode(length=100), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['ProfileID'], ['Profile.ProfileID'], ),
    sa.PrimaryKeyConstraint('ProfileTypeID')
    )
    op.create_table('ProfileVersion',
    sa.Column('ProfileVersionID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ProfileID', sa.Integer(), nullable=False),
    sa.Column('VersionNumber', sa.Integer(), nullable=False),
    sa.Column('IsConfirmed', sa.Boolean(), nullable=True),
    sa.Column('HappinessScore', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['ProfileID'], ['Profile.ProfileID'], ),
    sa.PrimaryKeyConstraint('ProfileVersionID')
    )
    op.create_table('ProfileVolunteerExperience',
    sa.Column('ProfileVolunteerExperienceID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ProfileID', sa.Integer(), nullable=False),
    sa.Column('OrganizationName', sa.Unicode(length=255), nullable=False),
    sa.Column('Role', sa.Unicode(length=255), nullable=True),
    sa.Column('StartDate', sa.DateTime(), nullable=True),
    sa.Column('EndDate', sa.DateTime(), nullable=True),
    sa.Column('Description', sa.Unicode(length=1000), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['ProfileID'], ['Profile.ProfileID'], ),
    sa.PrimaryKeyConstraint('ProfileVolunteerExperienceID')
    )
    op.create_table('ProfileWorkExperience',
    sa.Column('ProfileWorkExperienceID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ProfileID', sa.Integer(), nullable=False),
    sa.Column('JobTitle', sa.Unicode(length=255), nullable=False),
    sa.Column('CompanyName', sa.Unicode(length=255), nullable=False),
    sa.Column('StartDate', sa.DateTime(), nullable=True),
    sa.Column('EndDate', sa.DateTime(), nullable=True),
    sa.Column('IsCurrent', sa.Boolean(), nullable=True),
    sa.Column('Description', sa.Unicode(length=2000), nullable=True),
    sa.Column('Achievements', sa.Unicode(length=2000), nullable=True),
    sa.Column('IsAchievement', sa.Boolean(), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['ProfileID'], ['Profile.ProfileID'], ),
    sa.PrimaryKeyConstraint('ProfileWorkExperienceID')
    )
    op.create_table('CoverLetterCoverLetterVersion',
    sa.Column('CoverLetterCoverLetterVersionID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('CoverLetterID', sa.Integer(), nullable=False),
    sa.Column('ProfileVersionID', sa.Integer(), nullable=False),
    sa.Column('JobBoardJobID', sa.Integer(), nullable=True),
    sa.Column('Content', sa.UnicodeText(), nullable=True),
    sa.Column('Tone', sa.Unicode(length=50), nullable=True),
    sa.Column('ExportFormat', sa.Unicode(length=50), nullable=True),
    sa.Column('FileURL', sa.Unicode(length=500), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['CoverLetterID'], ['CoverLetter.CoverLetterID'], ),
    sa.ForeignKeyConstraint(['JobBoardJobID'], ['JobBoardJob.JobBoardJobID'], ),
    sa.ForeignKeyConstraint(['ProfileVersionID'], ['ProfileVersion.ProfileVersionID'], ),
    sa.PrimaryKeyConstraint('CoverLetterCoverLetterVersionID')
    )
    op.create_table('JobBoardJobSkill',
    sa.Column('JobBoardJobSkillID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('JobBoardJobID', sa.Integer(), nullable=False),
    sa.Column('SkillName', sa.Unicode(length=255), nullable=False),
    sa.Column('SkillType', sa.Unicode(length=50), nullable=True),
    sa.Column('Importance', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['JobBoardJobID'], ['JobBoardJob.JobBoardJobID'], ),
    sa.PrimaryKeyConstraint('JobBoardJobSkillID')
    )
    op.create_table('JobBoardJobVersion',
    sa.Column('JobBoardJobVersionID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('JobBoardJobID', sa.Integer(), nullable=False),
    sa.Column('VersionNumber', sa.Integer(), nullable=False),
    sa.Column('ChangeReason', sa.Unicode(length=255), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['JobBoardJobID'], ['JobBoardJob.JobBoardJobID'], ),
    sa.PrimaryKeyConstraint('JobBoardJobVersionID')
    )
    op.create_table('ResumeResumeVersion',
    sa.Column('ResumeResumeVersionID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ResumeID', sa.Integer(), nullable=False),
    sa.Column('ProfileVersionID', sa.Integer(), nullable=False),
    sa.Column('JobBoardJobID', sa.Integer(), nullable=True),
    sa.Column('Content', sa.UnicodeText(), nullable=True),
    sa.Column('Template', sa.Unicode(length=100), nullable=True),
    sa.Column('Tone', sa.Unicode(length=50), nullable=True),
    sa.Column('ExportFormat', sa.Unicode(length=50), nullable=True),
    sa.Column('FileURL', sa.Unicode(length=500), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['JobBoardJobID'], ['JobBoardJob.JobBoardJobID'], ),
    sa.ForeignKeyConstraint(['ProfileVersionID'], ['ProfileVersion.ProfileVersionID'], ),
    sa.ForeignKeyConstraint(['ResumeID'], ['Resume.ResumeID'], ),
    sa.PrimaryKeyConstraint('ResumeResumeVersionID')
    )
    op.create_table('UserAchievement',
    sa.Column('UserAchievementID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('AchievementName', sa.Unicode(length=255), nullable=False),
    sa.Column('AchievementDescription', sa.Unicode(length=500), nullable=True),
    sa.Column('EarnedDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('UserAchievementID')
    )
    op.create_table('UserAnalytics',
    sa.Column('UserAnalyticsID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('ProfileCompleteness', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('TotalJobApplications', sa.Integer(), nullable=True),
    sa.Column('AverageFitScore', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('ResumeGeneratedCount', sa.Integer(), nullable=True),
    sa.Column('LastActivityDate', sa.DateTime(), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('UserAnalyticsID')
    )
    op.create_table('UserEmailAddress',
    sa.Column('UserEmailAddressID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('EmailAddress', sa.Unicode(length=255), nullable=False),
    sa.Column('EmailType', sa.Unicode(length=50), nullable=True),
    sa.Column('IsVerified', sa.Boolean(), nullable=True),
    sa.Column('IsActive', sa.Boolean(), nullable=True),
    sa.Column('IsLoginEmail', sa.Boolean(), nullable=True),
    sa.Column('VerificationToken', sa.Unicode(length=255), nullable=True),
    sa.Column('VerificationExpiry', sa.DateTime(), nullable=True),
    sa.Column('VerifiedDate', sa.DateTime(), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('UserEmailAddressID')
    )
    op.create_index(op.f('ix_UserEmailAddress_EmailAddress'), 'UserEmailAddress', ['EmailAddress'], unique=True)
    op.create_table('UserGamificationPoints',
    sa.Column('UserGamificationPointsID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('PointsEarned', sa.Integer(), nullable=False),
    sa.Column('PointsType', sa.Unicode(length=50), nullable=True),
    sa.Column('Description', sa.Unicode(length=255), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('UserGamificationPointsID')
    )
    op.create_table('UserJobBoardJobFitScore',
    sa.Column('UserJobBoardJobFitScoreID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('JobBoardJobID', sa.Integer(), nullable=False),
    sa.Column('ProfileVersionID', sa.Integer(), nullable=False),
    sa.Column('OverallScore', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('SkillsMatched', sa.Integer(), nullable=True),
    sa.Column('SkillsPartial', sa.Integer(), nullable=True),
    sa.Column('SkillsMissing', sa.Integer(), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['JobBoardJobID'], ['JobBoardJob.JobBoardJobID'], ),
    sa.ForeignKeyConstraint(['ProfileVersionID'], ['ProfileVersion.ProfileVersionID'], ),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('UserJobBoardJobFitScoreID')
    )
    op.create_table('UserJobBoardJobInteraction',
    sa.Column('UserJobBoardJobInteractionID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('JobBoardJobID', sa.Integer(), nullable=False),
    sa.Column('InteractionType', sa.Unicode(length=50), nullable=True),
    sa.Column('FitScore', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('UserNotes', sa.Unicode(length=1000), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['JobBoardJobID'], ['JobBoardJob.JobBoardJobID'], ),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('UserJobBoardJobInteractionID')
    )
    op.create_table('UserJobBoardJobSearchAnalytics',
    sa.Column('UserJobBoardJobSearchAnalyticsID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('JobBoardID', sa.Integer(), nullable=True),
    sa.Column('ApplicationsCount', sa.Integer(), nullable=True),
    sa.Column('InterviewCount', sa.Integer(), nullable=True),
    sa.Column('OfferCount', sa.Integer(), nullable=True),
    sa.Column('SuccessRate', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('Period', sa.Unicode(length=20), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['JobBoardID'], ['JobBoard.JobBoardID'], ),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('UserJobBoardJobSearchAnalyticsID')
    )
    op.create_table('UserNotification',
    sa.Column('UserNotificationID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('NotificationType', sa.Unicode(length=50), nullable=True),
    sa.Column('Title', sa.Unicode(length=255), nullable=True),
    sa.Column('Message', sa.Unicode(length=1000), nullable=True),
    sa.Column('IsRead', sa.Boolean(), nullable=True),
    sa.Column('IsEmailSent', sa.Boolean(), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('UserNotificationID')
    )
    op.create_table('UserNotificationPreference',
    sa.Column('UserNotificationPreferenceID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('NotificationType', sa.Unicode(length=50), nullable=True),
    sa.Column('EmailEnabled', sa.Boolean(), nullable=True),
    sa.Column('InAppEnabled', sa.Boolean(), nullable=True),
    sa.Column('Frequency', sa.Unicode(length=50), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('UserNotificationPreferenceID')
    )
    op.create_table('UserSkillGapResolution',
    sa.Column('UserSkillGapResolutionID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('SkillName', sa.Unicode(length=255), nullable=False),
    sa.Column('ResolutionType', sa.Unicode(length=50), nullable=True),
    sa.Column('ResolutionDate', sa.DateTime(), nullable=True),
    sa.Column('Notes', sa.Unicode(length=1000), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('UserSkillGapResolutionID')
    )
    op.create_table('UserEmailAddressHistory',
    sa.Column('UserEmailAddressHistoryID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserEmailAddressID', sa.Integer(), nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('EmailAddress', sa.Unicode(length=255), nullable=False),
    sa.Column('Action', sa.Unicode(length=50), nullable=True),
    sa.Column('PreviousValue', sa.Unicode(length=255), nullable=True),
    sa.Column('NewValue', sa.Unicode(length=255), nullable=True),
    sa.Column('Reason', sa.Unicode(length=500), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['UserEmailAddressID'], ['UserEmailAddress.UserEmailAddressID'], ),
    sa.ForeignKeyConstraint(['UserID'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('UserEmailAddressHistoryID')
    )
    op.create_table('UserEmailVerificationLog',
    sa.Column('UserEmailVerificationLogID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserEmailAddressID', sa.Integer(), nullable=False),
    sa.Column('VerificationToken', sa.Unicode(length=255), nullable=True),
    sa.Column('VerificationAttempts', sa.Integer(), nullable=True),
    sa.Column('LastAttemptDate', sa.DateTime(), nullable=True),
    sa.Column('IsSuccessful', sa.Boolean(), nullable=True),
    sa.Column('IPAddress', sa.Unicode(length=50), nullable=True),
    sa.Column('UserAgent', sa.Unicode(length=500), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['UserEmailAddressID'], ['UserEmailAddress.UserEmailAddressID'], ),
    sa.PrimaryKeyConstraint('UserEmailVerificationLogID')
    )
    op.create_table('UserJobBoardJobFitScoreDetail',
    sa.Column('UserJobBoardJobFitScoreDetailID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserJobBoardJobFitScoreID', sa.Integer(), nullable=False),
    sa.Column('SkillName', sa.Unicode(length=255), nullable=False),
    sa.Column('MatchStatus', sa.Unicode(length=50), nullable=True),
    sa.Column('UserSkillLevel', sa.Unicode(length=50), nullable=True),
    sa.Column('JobSkillRequirement', sa.Unicode(length=50), nullable=True),
    sa.Column('Score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('createdBy', sa.Unicode(length=100), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('updatedBy', sa.Unicode(length=100), nullable=True),
    sa.ForeignKeyConstraint(['UserJobBoardJobFitScoreID'], ['UserJobBoardJobFitScore.UserJobBoardJobFitScoreID'], ),
    sa.PrimaryKeyConstraint('UserJobBoardJobFitScoreDetailID')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('UserJobBoardJobFitScoreDetail')
    op.drop_table('UserEmailVerificationLog')
    op.drop_table('UserEmailAddressHistory')
    op.drop_table('UserSkillGapResolution')
    op.drop_table('UserNotificationPreference')
    op.drop_table('UserNotification')
    op.drop_table('UserJobBoardJobSearchAnalytics')
    op.drop_table('UserJobBoardJobInteraction')
    op.drop_table('UserJobBoardJobFitScore')
    op.drop_table('UserGamificationPoints')
    op.drop_index(op.f('ix_UserEmailAddress_EmailAddress'), table_name='UserEmailAddress')
    op.drop_table('UserEmailAddress')
    op.drop_table('UserAnalytics')
    op.drop_table('UserAchievement')
    op.drop_table('ResumeResumeVersion')
    op.drop_table('JobBoardJobVersion')
    op.drop_table('JobBoardJobSkill')
    op.drop_table('CoverLetterCoverLetterVersion')
    op.drop_table('ProfileWorkExperience')
    op.drop_table('ProfileVolunteerExperience')
    op.drop_table('ProfileVersion')
    op.drop_table('ProfileType')
    op.drop_table('ProfileProject')
    op.drop_table('ProfileEducation')
    op.drop_table('ProfileConsent')
    op.drop_table('ProfileCertification')
    op.drop_table('ProfileCareerAspiration')
    op.drop_table('JobBoardJob')
    op.drop_table('JobBoard')
    op.drop_table('ExportTemplate')
    # ### end Alembic commands ###
